{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport { Box, Center, FormControl, Heading, Input, Text, VStack, Link, Button, HStack } from \"native-base\";\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\nimport { auth } from \"../Config/firebase\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction LoginScreen() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var onHandleLogin = function onHandleLogin() {\n    if (email !== \"\" && password !== \"\") {\n      console.log(email + \"  \" + auth);\n      signInWithEmailAndPassword(auth, email, password).then(function () {\n        return console.log(\"Login success\");\n      }).catch(function (err) {\n        return alert(\"oke\", err.message);\n      });\n    }\n  };\n\n  return _jsx(Center, {\n    w: \"100%\",\n    children: _jsxs(Box, {\n      safeArea: true,\n      p: \"2\",\n      py: \"8\",\n      w: \"90%\",\n      maxW: \"290\",\n      children: [_jsx(Heading, {\n        size: \"lg\",\n        fontWeight: \"600\",\n        color: \"coolGray.800\",\n        _dark: {\n          color: \"warmGray.50\"\n        },\n        children: \"Welcome\"\n      }), _jsx(Heading, {\n        mt: \"1\",\n        _dark: {\n          color: \"warmGray.200\"\n        },\n        color: \"coolGray.600\",\n        fontWeight: \"medium\",\n        size: \"xs\",\n        children: \"Sign in to continue!\"\n      }), _jsxs(VStack, {\n        space: 3,\n        mt: \"5\",\n        children: [_jsxs(FormControl, {\n          children: [_jsx(FormControl.Label, {\n            children: \"Email ID\"\n          }), _jsx(Input, {\n            onChangeText: function onChangeText(text) {\n              return setEmail(text);\n            }\n          })]\n        }), _jsxs(FormControl, {\n          children: [_jsx(FormControl.Label, {\n            children: \"Password\"\n          }), _jsx(Input, {\n            type: \"password\",\n            onChangeText: function onChangeText(text) {\n              return setPassword(text);\n            }\n          }), _jsx(Link, {\n            _text: {\n              fontSize: \"xs\",\n              fontWeight: \"500\",\n              color: \"indigo.500\"\n            },\n            alignSelf: \"flex-end\",\n            mt: \"1\",\n            children: \"Forget Password?\"\n          })]\n        }), _jsx(Button, {\n          mt: \"2\",\n          colorScheme: \"indigo\",\n          onPress: onHandleLogin,\n          children: \"Sign in\"\n        }), _jsx(HStack, {\n          mt: \"6\",\n          justifyContent: \"center\",\n          children: _jsxs(Text, {\n            fontSize: \"sm\",\n            color: \"coolGray.600\",\n            _dark: {\n              color: \"warmGray.200\"\n            },\n            children: [\"I'm a new user.\", \" \"]\n          })\n        })]\n      })]\n    })\n  });\n}\n\nexport default LoginScreen;","map":{"version":3,"sources":["C:/laragon/www/my-app-expo/src/Screens/LoginScreen.js"],"names":["React","useState","Box","Center","FormControl","Heading","Input","Text","VStack","Link","Button","HStack","signInWithEmailAndPassword","auth","LoginScreen","email","setEmail","password","setPassword","onHandleLogin","console","log","then","catch","err","alert","message","color","text","fontSize","fontWeight"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Center,\r\n  FormControl,\r\n  Heading,\r\n  Input,\r\n  Text,\r\n  VStack,\r\n  Link,\r\n  Button,\r\n  HStack,\r\n} from \"native-base\";\r\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\r\nimport { auth } from \"../Config/firebase\";\r\n\r\nfunction LoginScreen() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const onHandleLogin = () => {\r\n    if (email !== \"\" && password !== \"\") {\r\n      console.log(email + \"  \" + auth);\r\n      signInWithEmailAndPassword(auth, email, password)\r\n        .then(() => console.log(\"Login success\"))\r\n        .catch((err) => alert(\"oke\", err.message));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Center w=\"100%\">\r\n      <Box safeArea p=\"2\" py=\"8\" w=\"90%\" maxW=\"290\">\r\n        <Heading\r\n          size=\"lg\"\r\n          fontWeight=\"600\"\r\n          color=\"coolGray.800\"\r\n          _dark={{\r\n            color: \"warmGray.50\",\r\n          }}\r\n        >\r\n          Welcome\r\n        </Heading>\r\n        <Heading\r\n          mt=\"1\"\r\n          _dark={{\r\n            color: \"warmGray.200\",\r\n          }}\r\n          color=\"coolGray.600\"\r\n          fontWeight=\"medium\"\r\n          size=\"xs\"\r\n        >\r\n          Sign in to continue!\r\n        </Heading>\r\n\r\n        <VStack space={3} mt=\"5\">\r\n          <FormControl>\r\n            <FormControl.Label>Email ID</FormControl.Label>\r\n            <Input onChangeText={(text) => setEmail(text)} />\r\n          </FormControl>\r\n          <FormControl>\r\n            <FormControl.Label>Password</FormControl.Label>\r\n            <Input type=\"password\" onChangeText={(text) => setPassword(text)} />\r\n            <Link\r\n              _text={{\r\n                fontSize: \"xs\",\r\n                fontWeight: \"500\",\r\n                color: \"indigo.500\",\r\n              }}\r\n              alignSelf=\"flex-end\"\r\n              mt=\"1\"\r\n            >\r\n              Forget Password?\r\n            </Link>\r\n          </FormControl>\r\n          <Button mt=\"2\" colorScheme=\"indigo\" onPress={onHandleLogin}>\r\n            Sign in\r\n          </Button>\r\n          <HStack mt=\"6\" justifyContent=\"center\">\r\n            <Text\r\n              fontSize=\"sm\"\r\n              color=\"coolGray.600\"\r\n              _dark={{\r\n                color: \"warmGray.200\",\r\n              }}\r\n            >\r\n              I'm a new user.{\" \"}\r\n            </Text>\r\n          </HStack>\r\n        </VStack>\r\n      </Box>\r\n    </Center>\r\n  );\r\n}\r\n\r\nexport default LoginScreen;\r\n"]},"metadata":{},"sourceType":"module"}